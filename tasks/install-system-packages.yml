---
- name: Install essential packages
  apt:
    name:
      - curl
      - git
      - zsh
      - htop
      - gcc
      - cmake
      - fzf
      - unzip
      - rsync
      - tmux
      - nodejs
      - ripgrep
      - luarocks
    state: present
    update_cache: yes
  become: yes

- name: Check if Homebrew is installed
  ansible.builtin.command:
    cmd: brew --version
  register: brew_check
  ignore_errors: yes
  changed_when: false

- name: Install Homebrew
  ansible.builtin.shell:
    cmd: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  when: brew_check.rc != 0

- name: Add Homebrew to PATH in .bashrc
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK: homebrew"
    block: |
      eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    create: yes
    mode: '0600'

- name: Remove existing Go installation
  become: yes
  file:
    path: /usr/local/go
    state: absent

- name: Download Go archive
  get_url:
    url: https://go.dev/dl/go1.24.0.linux-amd64.tar.gz
    dest: /tmp/go1.24.0.linux-amd64.tar.gz

- name: Extract Go archive
  become: yes
  ansible.builtin.unarchive:
    src: /tmp/go1.24.0.linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes

- name: Ensure Go binary path is in system-wide profile
  become: yes
  lineinfile:
    path: /etc/profile
    line: 'export PATH=$PATH:/usr/local/go/bin'
    create: yes

- name: Apply profile changes immediately
  shell: source /etc/profile
  args:
    executable: /bin/bash

- name: Check if rustup is installed
  ansible.builtin.command:
    cmd: rustup --version
  register: rustup_check
  ignore_errors: yes
  changed_when: false

- name: Install rustup
  ansible.builtin.shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sudo sh -s -- -y
  args:
    executable: /bin/bash
  become: yes
  when: rustup_check.rc != 0

- name: Ensure Rust environment is sourced in shell config
  lineinfile:
    path: "~/.bashrc"  # Change this for other shells
    line: '. "$HOME/.cargo/env"'
    create: yes
    state: present

- name: Install tiktoken_core via luarocks
  ansible.builtin.shell: |
    . "$HOME/.cargo/env"
    luarocks install tiktoken_core
  args:
    executable: /bin/bash
  become: yes

- name: Download Neovim
  get_url:
    url: https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz
    dest: /tmp/nvim-linux-x86_64.tar.gz

- name: Remove old Neovim installation
  file:
    path: /opt/nvim
    state: absent

- name: Extract Neovim to /opt
  ansible.builtin.unarchive:
    src: /tmp/nvim-linux-x86_64.tar.gz
    dest: /opt
    remote_src: yes

- name: Add Neovim to PATH
  lineinfile:
    path: ~/.bashrc
    line: 'export PATH="$PATH:/opt/nvim-linux-x86_64/bin"'
    create: yes

- name: Homebrew tap
  ansible.builtin.homebrew_tap:
    name:
      - arl/arl
  when: brew_check.rc == 0 or brew_check.failed is defined

- name: Install packages with Homebrew
  ansible.builtin.homebrew:
    name:
     - fzf
     - lazygit
     - neovim
     - zoxide
     - arl/arl/gitmux
    state: present
  when: brew_check.rc == 0 or brew_check.failed is defined

- name: Add fzf and zoxide to .bashrc
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK: fzf"
    block: |
      eval "$(fzf --bash)"
      eval "$(zoxide init bash --cmd cd)"
    create: yes
    mode: '0600'

- name: Clone TPM (Tmux Plugin Manager)
  ansible.builtin.git:
    repo: 'https://github.com/tmux-plugins/tpm'
    dest: '~/.tmux/plugins/tpm'
    update: yes

- name: Install plugins with TPM
  command: "~/.tmux/plugins/tpm/bin/install_plugins"

